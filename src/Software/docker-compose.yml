version: "3.3"

services:
  proxy:
    image: nginx
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    volumes:
      #- ./docker/nginx/:/etc/nginx/:ro
      - ./docker/ssl/:/etc/nginx/ssl/:ro
      - ./docker/nginx/mime.types:/etc/nginx/mime.types:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/var/www/static:ro
    depends_on:
      - web
  web:
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    restart: on-failure
    command: bash -c "/usr/local/bin/wait && /usr/local/bin/start"
    volumes:
      - ./src/teamverwaltung/:/var/django/app:ro
      - ./docker/ssl/:/var/www/ssl/:ro
      - ./docker/django/gunicorn.py:/var/gunicorn/gunicorn.py:ro
      - ./docker/django/wait:/usr/local/bin/wait:ro
      - ./docker/django/start:/usr/local/bin/start:ro
      - static_volume:/var/www/static:rw
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - db
  db:
    image: mysql
    restart: on-failure
    volumes:
      - ./docker/mysql/django.sql:/docker-entrypoint-initdb.d/django.sql:rw
      - mysql-data:/var/lib/mysql:rw
    environment:
      MYSQL_DATABASE: "django"
      MYSQL_USER: "dev"
      MYSQL_PASSWORD: "devpw"
      MYSQL_ROOT_PASSWORD: "rootpw"

volumes:
  static_volume:
  mysql-data:
